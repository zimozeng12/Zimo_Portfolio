{"title":"ZIMO.SYSTEM","markdown":{"yaml":{"title":"ZIMO.SYSTEM ","format":{"html":{"theme":"cosmo","css":"styles.css","toc":false,"embed-resources":true,"html-unsafe":true,"navbar":false}}},"containsRefs":false,"markdown":"\n\n<div class=\"top-left-tag\">▶ HELLO, WORLD.</div>\n\n```{=html}\n<div class=\"hero-container\">\n  <img src=\"avatar.png\" alt=\"Zimo Avatar\" class=\"avatar neon-glow\" />\n  <h1>Zimo System Online</h1>\n  <h2 id=\"typewriter-text\" class=\"typewriter-output\"></h2>\n\n  <div class=\"hero-buttons\">\n    <div class=\"button-block\">\n      <a href=\"about.qmd\" class=\"btn\">🧬 ABOUT MODULE</a>\n      <p class=\"btn-desc\">Zimo’s background<br>and system bio</p>\n    </div>\n    <div class=\"button-block\">\n      <a href=\"projects.qmd\" class=\"btn\">🚀 SHOW TIME</a>\n      <p class=\"btn-desc\">Data projects<br>and quests</p>\n    </div>\n    <div class=\"button-block\">\n      <a href=\"cv.qmd\" class=\"btn\">📃 RESUME FILE</a>\n      <p class=\"btn-desc\">Academic & work<br>experience log</p>\n    </div>\n    <div class=\"button-block\">\n      <a href=\"contact.qmd\" class=\"btn\">📩 PING ZIMO</a>\n      <p class=\"btn-desc\">Shoot a signal<br>and get in touch</p>\n    </div>\n  </div>\n</div>\n```\n\n<script>\n  const words = [\n    \"I work with data\",\n    \"Always learning\",\n    \"Lover of cats and dogs\",\n    \"Orange enthusiast\",\n    \"Globe trotter\"\n  ];\n  const emojis = [\"📊\", \"📚\", \"🐱🐶\", \"🍊\", \"✈️\"];\n  let index = 0;\n  let charIndex = 0;\n  let displayText = \"\";\n\n  function typeNextChar() {\n    const fullText = words[index];\n    if (charIndex < fullText.length) {\n      displayText = fullText.substring(0, charIndex + 1);\n      document.getElementById(\"typewriter-text\").innerHTML =\n        `<span>${displayText}</span> <span>${emojis[index]}</span> <span class=\"cursor\">|</span>`;\n      charIndex++;\n      setTimeout(typeNextChar, 70);\n    } else {\n      setTimeout(() => {\n        charIndex = 0;\n        displayText = \"\";\n        index = (index + 1) % words.length;\n        typeNextChar();\n      }, 2000);\n    }\n  }\n\n  window.addEventListener(\"DOMContentLoaded\", function () {\n    console.log(\"🟠 Zimo-style typewriter started\");\n    typeNextChar();\n  });\n</script>\n\n<style>\n  .cursor {\n    animation: blink 1s infinite;\n  }\n  @keyframes blink {\n    0%, 100% { opacity: 1; }\n    50% { opacity: 0; }\n  }\n</style>\n\n```{=html}\n<!-- ✨ Cosmic Background Effects -->\n<div id=\"cyber-meteor-layer\">\n  <div class=\"meteor\" style=\"left: 10%; animation-duration: 5s; animation-delay: 0s;\"></div>\n  <div class=\"meteor\" style=\"left: 30%; animation-duration: 7s; animation-delay: 2s;\"></div>\n  <div class=\"meteor\" style=\"left: 50%; animation-duration: 6s; animation-delay: 4s;\"></div>\n  <div class=\"meteor\" style=\"left: 70%; animation-duration: 5s; animation-delay: 1s;\"></div>\n  <div class=\"meteor\" style=\"left: 90%; animation-duration: 8s; animation-delay: 3s;\"></div>\n</div>\n<div id=\"star-field\"></div>\n<div id=\"ripple-cursor\"></div>\n```\n````{=html}\n<div id=\"twinkle-layer\"></div>\n\n<script>\n  const twinkleLayer = document.getElementById('twinkle-layer');\n\n  function spawnTwinkleStars() {\n    const star = document.createElement('div');\n    star.className = 'twinkle-star';\n\n    star.style.left = `${Math.random() * 100}vw`;\n    star.style.top = `${Math.random() * 100}vh`;\n    star.style.animationDuration = `${1 + Math.random() * 2}s`;\n    twinkleLayer.appendChild(star);\n\n    setTimeout(() => star.remove(), 3000);\n  }\n\n  function spawnMultipleStars(count = 3) {\n    for (let i = 0; i < count; i++) {\n      spawnTwinkleStars();\n    }\n  }\n\n  setInterval(() => {\n    if (Math.random() < 0.9) spawnMultipleStars(2 + Math.floor(Math.random() * 3));\n  }, 400);\n</script>\n\n","srcMarkdownNoYaml":"\n\n<div class=\"top-left-tag\">▶ HELLO, WORLD.</div>\n\n```{=html}\n<div class=\"hero-container\">\n  <img src=\"avatar.png\" alt=\"Zimo Avatar\" class=\"avatar neon-glow\" />\n  <h1>Zimo System Online</h1>\n  <h2 id=\"typewriter-text\" class=\"typewriter-output\"></h2>\n\n  <div class=\"hero-buttons\">\n    <div class=\"button-block\">\n      <a href=\"about.qmd\" class=\"btn\">🧬 ABOUT MODULE</a>\n      <p class=\"btn-desc\">Zimo’s background<br>and system bio</p>\n    </div>\n    <div class=\"button-block\">\n      <a href=\"projects.qmd\" class=\"btn\">🚀 SHOW TIME</a>\n      <p class=\"btn-desc\">Data projects<br>and quests</p>\n    </div>\n    <div class=\"button-block\">\n      <a href=\"cv.qmd\" class=\"btn\">📃 RESUME FILE</a>\n      <p class=\"btn-desc\">Academic & work<br>experience log</p>\n    </div>\n    <div class=\"button-block\">\n      <a href=\"contact.qmd\" class=\"btn\">📩 PING ZIMO</a>\n      <p class=\"btn-desc\">Shoot a signal<br>and get in touch</p>\n    </div>\n  </div>\n</div>\n```\n\n<script>\n  const words = [\n    \"I work with data\",\n    \"Always learning\",\n    \"Lover of cats and dogs\",\n    \"Orange enthusiast\",\n    \"Globe trotter\"\n  ];\n  const emojis = [\"📊\", \"📚\", \"🐱🐶\", \"🍊\", \"✈️\"];\n  let index = 0;\n  let charIndex = 0;\n  let displayText = \"\";\n\n  function typeNextChar() {\n    const fullText = words[index];\n    if (charIndex < fullText.length) {\n      displayText = fullText.substring(0, charIndex + 1);\n      document.getElementById(\"typewriter-text\").innerHTML =\n        `<span>${displayText}</span> <span>${emojis[index]}</span> <span class=\"cursor\">|</span>`;\n      charIndex++;\n      setTimeout(typeNextChar, 70);\n    } else {\n      setTimeout(() => {\n        charIndex = 0;\n        displayText = \"\";\n        index = (index + 1) % words.length;\n        typeNextChar();\n      }, 2000);\n    }\n  }\n\n  window.addEventListener(\"DOMContentLoaded\", function () {\n    console.log(\"🟠 Zimo-style typewriter started\");\n    typeNextChar();\n  });\n</script>\n\n<style>\n  .cursor {\n    animation: blink 1s infinite;\n  }\n  @keyframes blink {\n    0%, 100% { opacity: 1; }\n    50% { opacity: 0; }\n  }\n</style>\n\n```{=html}\n<!-- ✨ Cosmic Background Effects -->\n<div id=\"cyber-meteor-layer\">\n  <div class=\"meteor\" style=\"left: 10%; animation-duration: 5s; animation-delay: 0s;\"></div>\n  <div class=\"meteor\" style=\"left: 30%; animation-duration: 7s; animation-delay: 2s;\"></div>\n  <div class=\"meteor\" style=\"left: 50%; animation-duration: 6s; animation-delay: 4s;\"></div>\n  <div class=\"meteor\" style=\"left: 70%; animation-duration: 5s; animation-delay: 1s;\"></div>\n  <div class=\"meteor\" style=\"left: 90%; animation-duration: 8s; animation-delay: 3s;\"></div>\n</div>\n<div id=\"star-field\"></div>\n<div id=\"ripple-cursor\"></div>\n```\n````{=html}\n<div id=\"twinkle-layer\"></div>\n\n<script>\n  const twinkleLayer = document.getElementById('twinkle-layer');\n\n  function spawnTwinkleStars() {\n    const star = document.createElement('div');\n    star.className = 'twinkle-star';\n\n    star.style.left = `${Math.random() * 100}vw`;\n    star.style.top = `${Math.random() * 100}vh`;\n    star.style.animationDuration = `${1 + Math.random() * 2}s`;\n    twinkleLayer.appendChild(star);\n\n    setTimeout(() => star.remove(), 3000);\n  }\n\n  function spawnMultipleStars(count = 3) {\n    for (let i = 0; i < count; i++) {\n      spawnTwinkleStars();\n    }\n  }\n\n  setInterval(() => {\n    if (Math.random() < 0.9) spawnMultipleStars(2 + Math.floor(Math.random() * 3));\n  }, 400);\n</script>\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css","about.css","project.css","cv.css","contact.css"],"toc":false,"embed-resources":true,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.40","theme":"cosmo","includes":{"in-header":["font-loader.html","typeit-setup.html"]},"html-unsafe":true,"title":"ZIMO.SYSTEM ","navbar":false},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}